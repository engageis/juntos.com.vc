= javascript_include_tag 'catarse_moip'
- pr = Contribution.find(params[:id])
#catarse_moip_form
  = form_tag 'javascript:void(0);', class: 'moip' do
    .back-payment-moip-options.next_step_after_valid_document
      .w-row.list_payment.w-form
        .w-col.w-col-7.w-col-small-7.back-payment-moip-options-column
          .w-radio.w-clearfix
            = radio_button_tag 'payment_type', "cards", false, class: 'w-radio-input back-payment-radio-button'
            = label_tag :payment_type_cards, nil, class: "cards w-form-label" do
              = image_tag 'catarse_bootstrap/payment_cards.jpg'
        .w-col.w-col-5.w-col-small-5.back-payment-moip-options-column
          .w-radio.w-clearfix
            = radio_button_tag 'payment_type', "boleto", false, class: 'w-radio-input back-payment-radio-button'
            = label_tag :payment_type_boleto, class: "boleto w-form-label" do
              = image_tag 'catarse_bootstrap/payment_boleto.png'
        - if pr.project_id == 5756 || pr.project_id == 5666
          .w-col.w-col-5.w-col-small-5.back-payment-moip-options-column
            .w-radio.w-clearfix
              = radio_button_tag 'payment_type', "doacao_parcelada", false, class: 'w-radio-input back-payment-radio-button'
              = label_tag :payment_type_doacao_parcelada, class: "doacao_parcelada w-form-label", style: "padding-top: 8px" do
                = "Doação Parcelada"
    .formwrapperfb_comments_count
      #payment_type_cards_section.payment_section
        .w-row
          .w-col.w-col-6.w-sub-col
            = label_tag :payment_card_name, t('projects.contributions.edit.form_labels.payment_card_name'), class: 'field-label fontweight-semibold'
            = text_field_tag :payment_card_name, nil, class: 'w-input text-field', required: true
            .fontsize-smaller.text-error.u-marginbottom-20.fa.fa-exclamation-triangle.w-hidden[data-error-for="payment_card_name"]
              = t('projects.contributions.edit.errors.payment_errors_name')
          .w-col.w-col-6.cpf
            = label_tag :payment_card_cpf, t('projects.contributions.edit.form_labels.payment_card_cpf'), class: 'field-label fontweight-semibold'
            = text_field_tag :payment_card_cpf, nil, class: 'w-input text-field', data: {mask: '999.999.999-99'}, required: true
            .fontsize-smaller.text-error.u-marginbottom-20.fa.fa-exclamation-triangle.w-hidden[data-error-for="payment_card_cpf"]
              = t('projects.contributions.edit.errors.payment_errors_cpf')

        .w-row
          .w-col.w-col-6.w-col-small-6.w-col-tiny-6.w-sub-col-middle.phone
            = label_tag :payment_card_phone, t('projects.contributions.edit.form_labels.payment_card_phone'), class: 'field-label fontweight-semibold'
            = text_field_tag :payment_card_phone, nil, class: 'w-input text-field', data: { payment_card_phone: true }, required: true
            .fontsize-smaller.text-error.u-marginbottom-20.fa.fa-exclamation-triangle.w-hidden[data-error-for="payment_card_phone"]
              = t('projects.contributions.edit.errors.payment_errors_phone')

          .w-col.w-col-6.w-col-small-6.w-col-tiny-6.birth
            = label_tag :payment_card_birth, t('projects.contributions.edit.form_labels.payment_card_birth'), class: 'field-label fontweight-semibold'
            = text_field_tag :payment_card_birth, nil, class: 'w-input text-field', data: {mask: '99/99/9999'}, required: true
            .fontsize-smaller.text-error.u-marginbottom-20.fa.fa-exclamation-triangle.w-hidden[data-error-for="payment_card_birth"]
              = t('projects.contributions.edit.errors.payment_errors_birth')

        .w-row
          .w-col.w-col-6.w-sub-col.number
            = label_tag :payment_card_number, t('projects.contributions.edit.form_labels.payment_card_number') , class: 'field-label fontweight-semibold'
            .w-row
              .w-col.w-col-9.w-col-small-9.w-col-tiny-9
                = text_field_tag :payment_card_number, nil, class: 'w-input text-field prefix', required: true
              .w-col.w-col-3.w-col-small-3.w-col-tiny-3.text-field.postfix.no-hover
                #payment_card_flag.fontsize-smallest.fontcolor-secondary.u-text-center
            .fontsize-smaller.text-error.u-marginbottom-20.fa.fa-exclamation-triangle.w-hidden[data-error-for="payment_card_number"]
              = t('projects.contributions.edit.errors.payment_errors_number')

          .w-col.w-col-6
            .w-row
              .w-col.w-col-6.w-col-small-6.w-col-tiny-6.w-sub-col-middle.source
                = label_tag :payment_card_source, t('projects.contributions.edit.form_labels.payment_card_source'), class: 'field-label fontweight-semibold w-hidden-medium'
                = label_tag :payment_card_source, t('projects.contributions.edit.form_labels.payment_card_source_short'), class: 'field-label fontweight-semibold w-hidden-main w-hidden-small w-hidden-tiny'
                = text_field_tag :payment_card_source, nil, class: 'w-input text-field', required: true
                .fontsize-smaller.text-error.u-marginbottom-20.fa.fa-exclamation-triangle.w-hidden[data-error-for="payment_card_source"]
                  = t('projects.contributions.edit.errors.payment_errors_security_code')

              .w-col.w-col-6.w-col-small-6.w-col-tiny-6.date
                = label_tag :payment_card_date, t('projects.contributions.edit.form_labels.payment_card_date'), class: 'field-label fontweight-semibold'
                = text_field_tag :payment_card_date, nil, class: 'w-input text-field', data: {mask: '99/99'}, required: true
                .fontsize-smaller.text-error.u-marginbottom-20.fa.fa-exclamation-triangle.w-hidden[data-error-for="payment_card_date"]
                  = t('projects.contributions.edit.errors.payment_errors_expired')

        .w-row
          .w-col.w-col-12
            .payment-error-message.card.card-error.u-radius.zindex-10.u-marginbottom-30.w-hidden
              .fontsize-smaller.fontweight-bold.u-marginbottom-10= t('.review_errors_title')
              .message-text.fontsize-smaller = t('.review_errors')
        .w-row
          .w-col.w-col-push-3.w-col-6
            .loader.u-text-center.w-col.w-col-12.u-marginbottom-30 = image_tag "catarse_bootstrap/loader.gif"
            = submit_tag t('projects.contributions.review.form.labels.submit'), class: 'btn btn-large u-marginbottom-20', id: "credit_card_submit"
            = render partial: 'terms'
      #payment_type_boleto_section.w-hidden.payment_section
        .w-row
          .w-col.w-col-6
            = label_tag 'user_document_payment_slip', t('projects.contributions.review.form.labels.document'), class: 'field-label fontweight-semibold'
            = text_field_tag 'user_document_payment_slip', nil, { autocomplete: 'off', class: 'w-input text-field', required: true }
            .fontsize-smaller.text-error.u-marginbottom-20.fa.fa-exclamation-triangle.w-hidden[data-error-for="user_document_payment_slip"]
              = t('projects.contributions.edit.cpf')
        .w-row
          .w-col.w-col-12
            #payment-slip-instructions.card.card-message.u-radius.fontsize-small.zindex-10.u-marginbottom-30
              = t('projects.contributions.edit.errors.payment_boleto_link')

        .w-row
          .w-col.w-col-12
            .payment-error-message.card.card-error.u-radius.zindex-10.u-marginbottom-30.w-hidden
              .fontsize-smaller.fontweight-bold.u-marginbottom-10= t('.review_errors_title')
              .message-text.fontsize-smaller = t('.review_errors')
        .w-row
          .w-col.w-col-12
            #payment-slip-link.card.card-message.fontsize-small.u-radius.u-marginbottom-30.zindex-10.w-hidden
              .link_content.fontsize-smaller
        .w-row
          .w-col.w-col-push-3.w-col-6
            #card-loading.loader.u-text-center.w-col.w-col-12.u-marginbottom-30 = image_tag "catarse_bootstrap/loader.gif"
            = submit_tag t('projects.contributions.review.form.labels.build_boleto'), class: 'btn btn-large u-marginbottom-20', id: "build_boleto", disabled: true
            = render 'terms'
        / || pr.project_id == 4851
      - if pr.project_id == 5756 || pr.project_id == 5666
        #payment_type_doacao_parcelada_section.w-hidden.payment_section
          .w-row
            .w-col.w-col-6
              = label_tag 'user_document_payment_slip', t('projects.contributions.review.form.labels.document'), class: 'field-label fontweight-semibold'
              = text_field_tag 'user_document_payment_slip_installment', nil, {autocomplete: 'off', class: 'w-input text-field', required: true}
              .fontsize-smaller.text-error.u-marginbottom-20.fa.fa-exclamation-triangle.w-hidden.cpf-error[data-error-for="user_document_payment_slip_installment"]
                = "Informe um CPF válido"
          .w-row
            .w-col.w-col-6
              = label_tag 'method', 'Método de Pagamento', class: 'field-label fontweight-semibold'
              select id="method" name="method" class="select required w-input text-field w-select"
                option value=("Boletos")  Boletos
                option value=("Cartão de Crédito")  Cartão de Crédito
          .w-row
            .w-col.w-col-6
              = label_tag 'installments', 'Parcelas', class: 'field-label fontweight-semibold'
              select id="installments" name="installments" class="select required w-input text-field w-select"
                option value=("2")  2x
                option value=("3")  3x
                option value=("4")  4x
                option value=("5")  5x
                option value=("6")  6x
                option value=("7")  7x
                option value=("8")  8x
                option value=("9")  9x
                option value=("10")  10x
                option value=("11")  11x
                option value=("12")  12x
                option value=("13")  13x
          .w-row
            .w-col.w-col-12
              #payment-doacao_parcelada-instructions.card.card-message.u-radius.fontsize-small.zindex-10.u-marginbottom-30[style="display: none;"]
                = t('projects.contributions.edit.errors.payment_boleto_link')

          .w-row
            .w-col.w-col-12
              .payment-error-message.card.card-error.u-radius.zindex-10.u-marginbottom-30.w-hidden
                .fontsize-smaller.fontweight-bold.u-marginbottom-10= t('.review_errors_title')
                .message-text.fontsize-smaller = t('.review_errors')
          .w-row
            .w-col.w-col-12
              #payment-doacao_parcelada-link.card.card-message.fontsize-small.u-radius.u-marginbottom-30.zindex-10.w-hidden
                .link_content.fontsize-smaller
          .w-row
            .w-col.w-col-push-3.w-col-6
              #doacao_parcelada-loading.loader.u-text-center.w-col.w-col-12.u-marginbottom-30 = image_tag "catarse_bootstrap/loader.gif"
              = submit_tag "Solicitar doação parcelada", class: 'btn btn-large u-marginbottom-20', id: "build_doacao_parcelada", disabled: true

= javascript_include_tag js_moip_index_path
javascript:
  $().ready(function(){
    $('#build_boleto').on('click', function(){
      $(this).hide();
      $('#card-loading img').show();
      var contId = $('#contribution_id').val();
      $.ajax({
        url: '/pt/boleto/' + contId,
        type: 'PUT',
        data: "",
        success: function(data) {
          $('#build_boleto').remove();
          $('#payment-slip-instructions').html('<a href="' + data.url + '" target="_blank" class="alt-link">Clique aqui gerar o boleto e completar o pagamento.</a>');
          $('#card-loading img').hide();
        }
      });
      return false;
    });

    $('#build_doacao_parcelada').on('click', function () {
      $('.cpf-error').hide();
      if(valida_cpf_cnpj($('#user_document_payment_slip_installment').val())) {
        $(this).hide();
        $('#doacao_parcelada-loading img').show();
        var contId = $('#contribution_id').val();
        let method = $('#method').val();
        let installments = $('#installments').val();
        $.ajax({
          url: '/pt/doacaoparcelada/' + contId,
          type: 'PUT',
          data: {method: method, installments: installments},
          success: function (data) {
            $('#build_doacao_parcelada').remove();
            $('#payment-doacao_parcelada-instructions').show().html('Muito Obrigado, sua doação parcelada já foi registrada. Fique tranquilo (a) este valor será computado na plataforma nas próximas horas.<br>Você receberá um e-mail do Fundo de Bolsas para finalizar sua transação no formato escolhido.');
            $('#doacao_parcelada-loading img').hide();
          }
        });
      } else {
        $('.cpf-error').show();
      }
      return false;
    });
    /*
     verifica_cpf_cnpj
     Verifica se é CPF ou CNPJ
     @see http://www.todoespacoonline.com/w/
    */
    function verifica_cpf_cnpj(valor) {
      // Garante que o valor é uma string
      valor = valor.toString();
      // Remove caracteres inválidos do valor
      valor = valor.replace(/[^0-9]/g, '');
      // Verifica CPF
      if (valor.length === 11) {
        return 'CPF';
      }
      // Verifica CNPJ
      else if (valor.length === 14) {
        return 'CNPJ';
      }
      // Não retorna nada
      else {
        return false;
      }
    } // verifica_cpf_cnpj
    /*
     calc_digitos_posicoes
     Multiplica dígitos vezes posições
     @param string digitos Os digitos desejados
     @param string posicoes A posição que vai iniciar a regressão
     @param string soma_digitos A soma das multiplicações entre posições e dígitos
     @return string Os dígitos enviados concatenados com o último dígito
    */
    function calc_digitos_posicoes(digitos, posicoes = 10, soma_digitos = 0) {
      // Garante que o valor é uma string
      digitos = digitos.toString();
      // Faz a soma dos dígitos com a posição
      // Ex. para 10 posições:
      //   0    2    5    4    6    2    8    8   4
      // x10   x9   x8   x7   x6   x5   x4   x3  x2
      //   0 + 18 + 40 + 28 + 36 + 10 + 32 + 24 + 8 = 196
      for (var i = 0; i < digitos.length; i++) {
        // Preenche a soma com o dígito vezes a posição
        soma_digitos = soma_digitos + (digitos[i] * posicoes);
        // Subtrai 1 da posição
        posicoes--;
        // Parte específica para CNPJ
        // Ex.: 5-4-3-2-9-8-7-6-5-4-3-2
        if (posicoes < 2) {
          // Retorno a posição para 9
          posicoes = 9;
        }
      }
      // Captura o resto da divisão entre soma_digitos dividido por 11
      // Ex.: 196 % 11 = 9
      soma_digitos = soma_digitos % 11;
      // Verifica se soma_digitos é menor que 2
      if (soma_digitos < 2) {
        // soma_digitos agora será zero
        soma_digitos = 0;
      } else {
        // Se for maior que 2, o resultado é 11 menos soma_digitos
        // Ex.: 11 - 9 = 2
        // Nosso dígito procurado é 2
        soma_digitos = 11 - soma_digitos;
      }
      // Concatena mais um dígito aos primeiro nove dígitos
      // Ex.: 025462884 + 2 = 0254628842
      var cpf = digitos + soma_digitos;
      // Retorna
      return cpf;
    } // calc_digitos_posicoes
    /*
     Valida CPF
     Valida se for CPF
     @param  string cpf O CPF com ou sem pontos e traço
     @return bool True para CPF correto - False para CPF incorreto
    */
    function valida_cpf(valor) {
      // Garante que o valor é uma string
      valor = valor.toString();
      // Remove caracteres inválidos do valor
      valor = valor.replace(/[^0-9]/g, '');
      // Captura os 9 primeiros dígitos do CPF
      // Ex.: 02546288423 = 025462884
      var digitos = valor.substr(0, 9);
      // Faz o cálculo dos 9 primeiros dígitos do CPF para obter o primeiro dígito
      var novo_cpf = calc_digitos_posicoes(digitos);
      // Faz o cálculo dos 10 dígitos do CPF para obter o último dígito
      var novo_cpf = calc_digitos_posicoes(novo_cpf, 11);
      // Verifica se o novo CPF gerado é idêntico ao CPF enviado
      if (novo_cpf === valor) {
        // CPF válido
        return true;
      } else {
        // CPF inválido
        return false;
      }
    } // valida_cpf
    /*
     valida_cnpj
     Valida se for um CNPJ
     @param string cnpj
     @return bool true para CNPJ correto
    */
    function valida_cnpj(valor) {
      // Garante que o valor é uma string
      valor = valor.toString();
      // Remove caracteres inválidos do valor
      valor = valor.replace(/[^0-9]/g, '');
      // O valor original
      var cnpj_original = valor;
      // Captura os primeiros 12 números do CNPJ
      var primeiros_numeros_cnpj = valor.substr(0, 12);
      // Faz o primeiro cálculo
      var primeiro_calculo = calc_digitos_posicoes(primeiros_numeros_cnpj, 5);
      // O segundo cálculo é a mesma coisa do primeiro, porém, começa na posição 6
      var segundo_calculo = calc_digitos_posicoes(primeiro_calculo, 6);
      // Concatena o segundo dígito ao CNPJ
      var cnpj = segundo_calculo;
      // Verifica se o CNPJ gerado é idêntico ao enviado
      if (cnpj === cnpj_original) {
        return true;
      }
      // Retorna falso por padrão
      return false;
    } // valida_cnpj
    /*
     valida_cpf_cnpj
     Valida o CPF ou CNPJ
     @access public
     @return bool true para válido, false para inválido
    */
    function valida_cpf_cnpj(valor) {
      // Verifica se é CPF ou CNPJ
      var valida = verifica_cpf_cnpj(valor);
      // Garante que o valor é uma string
      valor = valor.toString();
      // Remove caracteres inválidos do valor
      valor = valor.replace(/[^0-9]/g, '');
      // Valida CPF
      if (valida === 'CPF') {
        // Retorna true para cpf válido
        return valida_cpf(valor);
      }
      // Valida CNPJ
      else if (valida === 'CNPJ') {
        // Retorna true para CNPJ válido
        return valida_cnpj(valor);
      }
      // Não retorna nada
      else {
        return false;
      }
    } // valida_cpf_cnpj
    /*
     formata_cpf_cnpj
     Formata um CPF ou CNPJ
     @access public
     @return string CPF ou CNPJ formatado
    */
    function formata_cpf_cnpj(valor) {
      // O valor formatado
      var formatado = false;
      // Verifica se é CPF ou CNPJ
      var valida = verifica_cpf_cnpj(valor);
      // Garante que o valor é uma string
      valor = valor.toString();
      // Remove caracteres inválidos do valor
      valor = valor.replace(/[^0-9]/g, '');
      // Valida CPF
      if (valida === 'CPF') {
        // Verifica se o CPF é válido
        if (valida_cpf(valor)) {
          // Formata o CPF ###.###.###-##
          formatado = valor.substr(0, 3) + '.';
          formatado += valor.substr(3, 3) + '.';
          formatado += valor.substr(6, 3) + '-';
          formatado += valor.substr(9, 2) + '';
        }
      }
      // Valida CNPJ
      else if (valida === 'CNPJ') {
        // Verifica se o CNPJ é válido
        if (valida_cnpj(valor)) {
          // Formata o CNPJ ##.###.###/####-##
          formatado = valor.substr(0, 2) + '.';
          formatado += valor.substr(2, 3) + '.';
          formatado += valor.substr(5, 3) + '/';
          formatado += valor.substr(8, 4) + '-';
          formatado += valor.substr(12, 14) + '';
        }
      }
      return formatado;
    }
  });
